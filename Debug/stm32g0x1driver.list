
stm32g0x1driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000890  080000bc  080000bc  000100bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800094c  08000954  00010954  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800094c  0800094c  00010954  2**0
                  CONTENTS
  4 .ARM          00000000  0800094c  0800094c  00010954  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800094c  08000954  00010954  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800094c  0800094c  0001094c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000950  08000950  00010950  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010954  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000954  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000954  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010954  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0001097c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a62  00000000  00000000  000109bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000271  00000000  00000000  00011421  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00011698  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000085  00000000  00000000  00011758  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001f58  00000000  00000000  000117dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001048  00000000  00000000  00013735  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008620  00000000  00000000  0001477d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000020c  00000000  00000000  0001cda0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005c  00000000  00000000  0001cfac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	; (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	; (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	; (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000000 	.word	0x20000000
 80000dc:	00000000 	.word	0x00000000
 80000e0:	08000934 	.word	0x08000934

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	; (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	; (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	; (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			; (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000004 	.word	0x20000004
 8000100:	08000934 	.word	0x08000934

08000104 <GPIO_ClkCtrl>:
 * @return 			- none
 *
 * @Note			- none
 */
void GPIO_ClkCtrl(GPIO_RegDef_t *pGPIOx, uint8_t E_D)
{
 8000104:	b580      	push	{r7, lr}
 8000106:	b082      	sub	sp, #8
 8000108:	af00      	add	r7, sp, #0
 800010a:	6078      	str	r0, [r7, #4]
 800010c:	000a      	movs	r2, r1
 800010e:	1cfb      	adds	r3, r7, #3
 8000110:	701a      	strb	r2, [r3, #0]
	if (E_D == ENABLE)
 8000112:	1cfb      	adds	r3, r7, #3
 8000114:	781b      	ldrb	r3, [r3, #0]
 8000116:	2b01      	cmp	r3, #1
 8000118:	d142      	bne.n	80001a0 <GPIO_ClkCtrl+0x9c>
	{
		if(pGPIOx == GPIOA)			{	GPIOA_CLK_EN();	}
 800011a:	687a      	ldr	r2, [r7, #4]
 800011c:	23a0      	movs	r3, #160	; 0xa0
 800011e:	05db      	lsls	r3, r3, #23
 8000120:	429a      	cmp	r2, r3
 8000122:	d106      	bne.n	8000132 <GPIO_ClkCtrl+0x2e>
 8000124:	4b41      	ldr	r3, [pc, #260]	; (800022c <GPIO_ClkCtrl+0x128>)
 8000126:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000128:	4b40      	ldr	r3, [pc, #256]	; (800022c <GPIO_ClkCtrl+0x128>)
 800012a:	2101      	movs	r1, #1
 800012c:	430a      	orrs	r2, r1
 800012e:	635a      	str	r2, [r3, #52]	; 0x34
		else if(pGPIOx == GPIOC)	{	GPIOC_CLK_DI();	}
		else if(pGPIOx == GPIOD)	{	GPIOD_CLK_DI();	}
		else if(pGPIOx == GPIOE)	{	GPIOE_CLK_DI();	}
		else if(pGPIOx == GPIOF)	{	GPIOF_CLK_DI();	}
	}
}
 8000130:	e078      	b.n	8000224 <GPIO_ClkCtrl+0x120>
		else if(pGPIOx == GPIOB)	{	GPIOB_CLK_EN();	}
 8000132:	687b      	ldr	r3, [r7, #4]
 8000134:	4a3e      	ldr	r2, [pc, #248]	; (8000230 <GPIO_ClkCtrl+0x12c>)
 8000136:	4293      	cmp	r3, r2
 8000138:	d106      	bne.n	8000148 <GPIO_ClkCtrl+0x44>
 800013a:	4b3c      	ldr	r3, [pc, #240]	; (800022c <GPIO_ClkCtrl+0x128>)
 800013c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800013e:	4b3b      	ldr	r3, [pc, #236]	; (800022c <GPIO_ClkCtrl+0x128>)
 8000140:	2102      	movs	r1, #2
 8000142:	430a      	orrs	r2, r1
 8000144:	635a      	str	r2, [r3, #52]	; 0x34
}
 8000146:	e06d      	b.n	8000224 <GPIO_ClkCtrl+0x120>
		else if(pGPIOx == GPIOC)	{	GPIOC_CLK_EN();	}
 8000148:	687b      	ldr	r3, [r7, #4]
 800014a:	4a3a      	ldr	r2, [pc, #232]	; (8000234 <GPIO_ClkCtrl+0x130>)
 800014c:	4293      	cmp	r3, r2
 800014e:	d106      	bne.n	800015e <GPIO_ClkCtrl+0x5a>
 8000150:	4b36      	ldr	r3, [pc, #216]	; (800022c <GPIO_ClkCtrl+0x128>)
 8000152:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000154:	4b35      	ldr	r3, [pc, #212]	; (800022c <GPIO_ClkCtrl+0x128>)
 8000156:	2104      	movs	r1, #4
 8000158:	430a      	orrs	r2, r1
 800015a:	635a      	str	r2, [r3, #52]	; 0x34
}
 800015c:	e062      	b.n	8000224 <GPIO_ClkCtrl+0x120>
		else if(pGPIOx == GPIOD)	{	GPIOD_CLK_EN();	}
 800015e:	687b      	ldr	r3, [r7, #4]
 8000160:	4a35      	ldr	r2, [pc, #212]	; (8000238 <GPIO_ClkCtrl+0x134>)
 8000162:	4293      	cmp	r3, r2
 8000164:	d106      	bne.n	8000174 <GPIO_ClkCtrl+0x70>
 8000166:	4b31      	ldr	r3, [pc, #196]	; (800022c <GPIO_ClkCtrl+0x128>)
 8000168:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800016a:	4b30      	ldr	r3, [pc, #192]	; (800022c <GPIO_ClkCtrl+0x128>)
 800016c:	2108      	movs	r1, #8
 800016e:	430a      	orrs	r2, r1
 8000170:	635a      	str	r2, [r3, #52]	; 0x34
}
 8000172:	e057      	b.n	8000224 <GPIO_ClkCtrl+0x120>
		else if(pGPIOx == GPIOE)	{	GPIOE_CLK_EN();	}
 8000174:	687b      	ldr	r3, [r7, #4]
 8000176:	4a31      	ldr	r2, [pc, #196]	; (800023c <GPIO_ClkCtrl+0x138>)
 8000178:	4293      	cmp	r3, r2
 800017a:	d106      	bne.n	800018a <GPIO_ClkCtrl+0x86>
 800017c:	4b2b      	ldr	r3, [pc, #172]	; (800022c <GPIO_ClkCtrl+0x128>)
 800017e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000180:	4b2a      	ldr	r3, [pc, #168]	; (800022c <GPIO_ClkCtrl+0x128>)
 8000182:	2110      	movs	r1, #16
 8000184:	430a      	orrs	r2, r1
 8000186:	635a      	str	r2, [r3, #52]	; 0x34
}
 8000188:	e04c      	b.n	8000224 <GPIO_ClkCtrl+0x120>
		else if(pGPIOx == GPIOF)	{	GPIOF_CLK_EN();	}
 800018a:	687b      	ldr	r3, [r7, #4]
 800018c:	4a2c      	ldr	r2, [pc, #176]	; (8000240 <GPIO_ClkCtrl+0x13c>)
 800018e:	4293      	cmp	r3, r2
 8000190:	d148      	bne.n	8000224 <GPIO_ClkCtrl+0x120>
 8000192:	4b26      	ldr	r3, [pc, #152]	; (800022c <GPIO_ClkCtrl+0x128>)
 8000194:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000196:	4b25      	ldr	r3, [pc, #148]	; (800022c <GPIO_ClkCtrl+0x128>)
 8000198:	2120      	movs	r1, #32
 800019a:	430a      	orrs	r2, r1
 800019c:	635a      	str	r2, [r3, #52]	; 0x34
}
 800019e:	e041      	b.n	8000224 <GPIO_ClkCtrl+0x120>
		if(pGPIOx == GPIOA)			{	GPIOA_CLK_DI();	}
 80001a0:	687a      	ldr	r2, [r7, #4]
 80001a2:	23a0      	movs	r3, #160	; 0xa0
 80001a4:	05db      	lsls	r3, r3, #23
 80001a6:	429a      	cmp	r2, r3
 80001a8:	d106      	bne.n	80001b8 <GPIO_ClkCtrl+0xb4>
 80001aa:	4b20      	ldr	r3, [pc, #128]	; (800022c <GPIO_ClkCtrl+0x128>)
 80001ac:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80001ae:	4b1f      	ldr	r3, [pc, #124]	; (800022c <GPIO_ClkCtrl+0x128>)
 80001b0:	2101      	movs	r1, #1
 80001b2:	438a      	bics	r2, r1
 80001b4:	635a      	str	r2, [r3, #52]	; 0x34
}
 80001b6:	e035      	b.n	8000224 <GPIO_ClkCtrl+0x120>
		else if(pGPIOx == GPIOB)	{	GPIOB_CLK_DI();	}
 80001b8:	687b      	ldr	r3, [r7, #4]
 80001ba:	4a1d      	ldr	r2, [pc, #116]	; (8000230 <GPIO_ClkCtrl+0x12c>)
 80001bc:	4293      	cmp	r3, r2
 80001be:	d106      	bne.n	80001ce <GPIO_ClkCtrl+0xca>
 80001c0:	4b1a      	ldr	r3, [pc, #104]	; (800022c <GPIO_ClkCtrl+0x128>)
 80001c2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80001c4:	4b19      	ldr	r3, [pc, #100]	; (800022c <GPIO_ClkCtrl+0x128>)
 80001c6:	2102      	movs	r1, #2
 80001c8:	438a      	bics	r2, r1
 80001ca:	635a      	str	r2, [r3, #52]	; 0x34
}
 80001cc:	e02a      	b.n	8000224 <GPIO_ClkCtrl+0x120>
		else if(pGPIOx == GPIOC)	{	GPIOC_CLK_DI();	}
 80001ce:	687b      	ldr	r3, [r7, #4]
 80001d0:	4a18      	ldr	r2, [pc, #96]	; (8000234 <GPIO_ClkCtrl+0x130>)
 80001d2:	4293      	cmp	r3, r2
 80001d4:	d106      	bne.n	80001e4 <GPIO_ClkCtrl+0xe0>
 80001d6:	4b15      	ldr	r3, [pc, #84]	; (800022c <GPIO_ClkCtrl+0x128>)
 80001d8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80001da:	4b14      	ldr	r3, [pc, #80]	; (800022c <GPIO_ClkCtrl+0x128>)
 80001dc:	2104      	movs	r1, #4
 80001de:	438a      	bics	r2, r1
 80001e0:	635a      	str	r2, [r3, #52]	; 0x34
}
 80001e2:	e01f      	b.n	8000224 <GPIO_ClkCtrl+0x120>
		else if(pGPIOx == GPIOD)	{	GPIOD_CLK_DI();	}
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	4a14      	ldr	r2, [pc, #80]	; (8000238 <GPIO_ClkCtrl+0x134>)
 80001e8:	4293      	cmp	r3, r2
 80001ea:	d106      	bne.n	80001fa <GPIO_ClkCtrl+0xf6>
 80001ec:	4b0f      	ldr	r3, [pc, #60]	; (800022c <GPIO_ClkCtrl+0x128>)
 80001ee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80001f0:	4b0e      	ldr	r3, [pc, #56]	; (800022c <GPIO_ClkCtrl+0x128>)
 80001f2:	2108      	movs	r1, #8
 80001f4:	438a      	bics	r2, r1
 80001f6:	635a      	str	r2, [r3, #52]	; 0x34
}
 80001f8:	e014      	b.n	8000224 <GPIO_ClkCtrl+0x120>
		else if(pGPIOx == GPIOE)	{	GPIOE_CLK_DI();	}
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a0f      	ldr	r2, [pc, #60]	; (800023c <GPIO_ClkCtrl+0x138>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_ClkCtrl+0x10c>
 8000202:	4b0a      	ldr	r3, [pc, #40]	; (800022c <GPIO_ClkCtrl+0x128>)
 8000204:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000206:	4b09      	ldr	r3, [pc, #36]	; (800022c <GPIO_ClkCtrl+0x128>)
 8000208:	2110      	movs	r1, #16
 800020a:	438a      	bics	r2, r1
 800020c:	635a      	str	r2, [r3, #52]	; 0x34
}
 800020e:	e009      	b.n	8000224 <GPIO_ClkCtrl+0x120>
		else if(pGPIOx == GPIOF)	{	GPIOF_CLK_DI();	}
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a0b      	ldr	r2, [pc, #44]	; (8000240 <GPIO_ClkCtrl+0x13c>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d105      	bne.n	8000224 <GPIO_ClkCtrl+0x120>
 8000218:	4b04      	ldr	r3, [pc, #16]	; (800022c <GPIO_ClkCtrl+0x128>)
 800021a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800021c:	4b03      	ldr	r3, [pc, #12]	; (800022c <GPIO_ClkCtrl+0x128>)
 800021e:	2120      	movs	r1, #32
 8000220:	438a      	bics	r2, r1
 8000222:	635a      	str	r2, [r3, #52]	; 0x34
}
 8000224:	46c0      	nop			; (mov r8, r8)
 8000226:	46bd      	mov	sp, r7
 8000228:	b002      	add	sp, #8
 800022a:	bd80      	pop	{r7, pc}
 800022c:	40021000 	.word	0x40021000
 8000230:	50000400 	.word	0x50000400
 8000234:	50000800 	.word	0x50000800
 8000238:	50000c00 	.word	0x50000c00
 800023c:	50001000 	.word	0x50001000
 8000240:	50001400 	.word	0x50001400

08000244 <GPIO_Init>:
 * @return 			- none
 *
 * @Note			- none
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000244:	b5b0      	push	{r4, r5, r7, lr}
 8000246:	b086      	sub	sp, #24
 8000248:	af00      	add	r7, sp, #0
 800024a:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 800024c:	2300      	movs	r3, #0
 800024e:	617b      	str	r3, [r7, #20]
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_PIN_MODE_ANALOG)
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	795b      	ldrb	r3, [r3, #5]
 8000254:	2b03      	cmp	r3, #3
 8000256:	d822      	bhi.n	800029e <GPIO_Init+0x5a>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	795b      	ldrb	r3, [r3, #5]
 800025c:	001a      	movs	r2, r3
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	791b      	ldrb	r3, [r3, #4]
 8000262:	005b      	lsls	r3, r3, #1
 8000264:	409a      	lsls	r2, r3
 8000266:	0013      	movs	r3, r2
 8000268:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->GPIOx_MODER &= ~(3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	681b      	ldr	r3, [r3, #0]
 800026e:	681a      	ldr	r2, [r3, #0]
 8000270:	687b      	ldr	r3, [r7, #4]
 8000272:	791b      	ldrb	r3, [r3, #4]
 8000274:	005b      	lsls	r3, r3, #1
 8000276:	2103      	movs	r1, #3
 8000278:	4099      	lsls	r1, r3
 800027a:	000b      	movs	r3, r1
 800027c:	43db      	mvns	r3, r3
 800027e:	0019      	movs	r1, r3
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	400a      	ands	r2, r1
 8000286:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->GPIOx_MODER |= temp;
 8000288:	687b      	ldr	r3, [r7, #4]
 800028a:	681b      	ldr	r3, [r3, #0]
 800028c:	6819      	ldr	r1, [r3, #0]
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	697a      	ldr	r2, [r7, #20]
 8000294:	430a      	orrs	r2, r1
 8000296:	601a      	str	r2, [r3, #0]
		temp = 0;
 8000298:	2300      	movs	r3, #0
 800029a:	617b      	str	r3, [r7, #20]
 800029c:	e0b6      	b.n	800040c <GPIO_Init+0x1c8>
	}
	else
	{
		//For G0 MCU, 00 is input mode
		pGPIOHandle->pGPIOx->GPIOx_MODER &= ~(3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	681a      	ldr	r2, [r3, #0]
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	791b      	ldrb	r3, [r3, #4]
 80002a8:	005b      	lsls	r3, r3, #1
 80002aa:	2103      	movs	r1, #3
 80002ac:	4099      	lsls	r1, r3
 80002ae:	000b      	movs	r3, r1
 80002b0:	43db      	mvns	r3, r3
 80002b2:	0019      	movs	r1, r3
 80002b4:	687b      	ldr	r3, [r7, #4]
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	400a      	ands	r2, r1
 80002ba:	601a      	str	r2, [r3, #0]
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_PIN_MODE_INT_FL)
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	795b      	ldrb	r3, [r3, #5]
 80002c0:	2b05      	cmp	r3, #5
 80002c2:	d116      	bne.n	80002f2 <GPIO_Init+0xae>
		{
			//Configure FTSR
			EXTI->EXTI_RTSR1 &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002c4:	4ba4      	ldr	r3, [pc, #656]	; (8000558 <GPIO_Init+0x314>)
 80002c6:	681a      	ldr	r2, [r3, #0]
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	791b      	ldrb	r3, [r3, #4]
 80002cc:	0019      	movs	r1, r3
 80002ce:	2301      	movs	r3, #1
 80002d0:	408b      	lsls	r3, r1
 80002d2:	43db      	mvns	r3, r3
 80002d4:	0019      	movs	r1, r3
 80002d6:	4ba0      	ldr	r3, [pc, #640]	; (8000558 <GPIO_Init+0x314>)
 80002d8:	400a      	ands	r2, r1
 80002da:	601a      	str	r2, [r3, #0]
			EXTI->EXTI_FTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002dc:	4b9e      	ldr	r3, [pc, #632]	; (8000558 <GPIO_Init+0x314>)
 80002de:	685a      	ldr	r2, [r3, #4]
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	791b      	ldrb	r3, [r3, #4]
 80002e4:	0019      	movs	r1, r3
 80002e6:	2301      	movs	r3, #1
 80002e8:	408b      	lsls	r3, r1
 80002ea:	0019      	movs	r1, r3
 80002ec:	4b9a      	ldr	r3, [pc, #616]	; (8000558 <GPIO_Init+0x314>)
 80002ee:	430a      	orrs	r2, r1
 80002f0:	605a      	str	r2, [r3, #4]
		}
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_PIN_MODE_INT_RI)
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	795b      	ldrb	r3, [r3, #5]
 80002f6:	2b04      	cmp	r3, #4
 80002f8:	d116      	bne.n	8000328 <GPIO_Init+0xe4>
		{
			//Configure RTSR
			EXTI->EXTI_FTSR1 &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002fa:	4b97      	ldr	r3, [pc, #604]	; (8000558 <GPIO_Init+0x314>)
 80002fc:	685a      	ldr	r2, [r3, #4]
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	791b      	ldrb	r3, [r3, #4]
 8000302:	0019      	movs	r1, r3
 8000304:	2301      	movs	r3, #1
 8000306:	408b      	lsls	r3, r1
 8000308:	43db      	mvns	r3, r3
 800030a:	0019      	movs	r1, r3
 800030c:	4b92      	ldr	r3, [pc, #584]	; (8000558 <GPIO_Init+0x314>)
 800030e:	400a      	ands	r2, r1
 8000310:	605a      	str	r2, [r3, #4]
			EXTI->EXTI_RTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000312:	4b91      	ldr	r3, [pc, #580]	; (8000558 <GPIO_Init+0x314>)
 8000314:	681a      	ldr	r2, [r3, #0]
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	791b      	ldrb	r3, [r3, #4]
 800031a:	0019      	movs	r1, r3
 800031c:	2301      	movs	r3, #1
 800031e:	408b      	lsls	r3, r1
 8000320:	0019      	movs	r1, r3
 8000322:	4b8d      	ldr	r3, [pc, #564]	; (8000558 <GPIO_Init+0x314>)
 8000324:	430a      	orrs	r2, r1
 8000326:	601a      	str	r2, [r3, #0]
		}
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_PIN_MODE_INT_RF)
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	795b      	ldrb	r3, [r3, #5]
 800032c:	2b06      	cmp	r3, #6
 800032e:	d115      	bne.n	800035c <GPIO_Init+0x118>
		{
			//Configure RTSR and FTSR
			EXTI->EXTI_RTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000330:	4b89      	ldr	r3, [pc, #548]	; (8000558 <GPIO_Init+0x314>)
 8000332:	681a      	ldr	r2, [r3, #0]
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	791b      	ldrb	r3, [r3, #4]
 8000338:	0019      	movs	r1, r3
 800033a:	2301      	movs	r3, #1
 800033c:	408b      	lsls	r3, r1
 800033e:	0019      	movs	r1, r3
 8000340:	4b85      	ldr	r3, [pc, #532]	; (8000558 <GPIO_Init+0x314>)
 8000342:	430a      	orrs	r2, r1
 8000344:	601a      	str	r2, [r3, #0]
			EXTI->EXTI_FTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000346:	4b84      	ldr	r3, [pc, #528]	; (8000558 <GPIO_Init+0x314>)
 8000348:	685a      	ldr	r2, [r3, #4]
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	791b      	ldrb	r3, [r3, #4]
 800034e:	0019      	movs	r1, r3
 8000350:	2301      	movs	r3, #1
 8000352:	408b      	lsls	r3, r1
 8000354:	0019      	movs	r1, r3
 8000356:	4b80      	ldr	r3, [pc, #512]	; (8000558 <GPIO_Init+0x314>)
 8000358:	430a      	orrs	r2, r1
 800035a:	605a      	str	r2, [r3, #4]
		}
		//configure EXTI_EXTICRx
		uint8_t temp1, temp2, port_value;
		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4);
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	791a      	ldrb	r2, [r3, #4]
 8000360:	2313      	movs	r3, #19
 8000362:	18fb      	adds	r3, r7, r3
 8000364:	0892      	lsrs	r2, r2, #2
 8000366:	701a      	strb	r2, [r3, #0]
		temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4);
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	791a      	ldrb	r2, [r3, #4]
 800036c:	2312      	movs	r3, #18
 800036e:	18fb      	adds	r3, r7, r3
 8000370:	2103      	movs	r1, #3
 8000372:	400a      	ands	r2, r1
 8000374:	701a      	strb	r2, [r3, #0]
		port_value = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	681a      	ldr	r2, [r3, #0]
 800037a:	23a0      	movs	r3, #160	; 0xa0
 800037c:	05db      	lsls	r3, r3, #23
 800037e:	429a      	cmp	r2, r3
 8000380:	d01d      	beq.n	80003be <GPIO_Init+0x17a>
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	681b      	ldr	r3, [r3, #0]
 8000386:	4a75      	ldr	r2, [pc, #468]	; (800055c <GPIO_Init+0x318>)
 8000388:	4293      	cmp	r3, r2
 800038a:	d016      	beq.n	80003ba <GPIO_Init+0x176>
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	681b      	ldr	r3, [r3, #0]
 8000390:	4a73      	ldr	r2, [pc, #460]	; (8000560 <GPIO_Init+0x31c>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d00f      	beq.n	80003b6 <GPIO_Init+0x172>
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	4a72      	ldr	r2, [pc, #456]	; (8000564 <GPIO_Init+0x320>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d008      	beq.n	80003b2 <GPIO_Init+0x16e>
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	4a70      	ldr	r2, [pc, #448]	; (8000568 <GPIO_Init+0x324>)
 80003a6:	4293      	cmp	r3, r2
 80003a8:	d101      	bne.n	80003ae <GPIO_Init+0x16a>
 80003aa:	2305      	movs	r3, #5
 80003ac:	e008      	b.n	80003c0 <GPIO_Init+0x17c>
 80003ae:	2300      	movs	r3, #0
 80003b0:	e006      	b.n	80003c0 <GPIO_Init+0x17c>
 80003b2:	2303      	movs	r3, #3
 80003b4:	e004      	b.n	80003c0 <GPIO_Init+0x17c>
 80003b6:	2302      	movs	r3, #2
 80003b8:	e002      	b.n	80003c0 <GPIO_Init+0x17c>
 80003ba:	2301      	movs	r3, #1
 80003bc:	e000      	b.n	80003c0 <GPIO_Init+0x17c>
 80003be:	2300      	movs	r3, #0
 80003c0:	2111      	movs	r1, #17
 80003c2:	187a      	adds	r2, r7, r1
 80003c4:	7013      	strb	r3, [r2, #0]
		EXTI->EXTI_EXTICR[temp1] |= port_value << (8*temp2);
 80003c6:	4a64      	ldr	r2, [pc, #400]	; (8000558 <GPIO_Init+0x314>)
 80003c8:	2413      	movs	r4, #19
 80003ca:	193b      	adds	r3, r7, r4
 80003cc:	781b      	ldrb	r3, [r3, #0]
 80003ce:	3318      	adds	r3, #24
 80003d0:	009b      	lsls	r3, r3, #2
 80003d2:	589a      	ldr	r2, [r3, r2]
 80003d4:	187b      	adds	r3, r7, r1
 80003d6:	7819      	ldrb	r1, [r3, #0]
 80003d8:	2312      	movs	r3, #18
 80003da:	18fb      	adds	r3, r7, r3
 80003dc:	781b      	ldrb	r3, [r3, #0]
 80003de:	00db      	lsls	r3, r3, #3
 80003e0:	4099      	lsls	r1, r3
 80003e2:	000b      	movs	r3, r1
 80003e4:	0018      	movs	r0, r3
 80003e6:	495c      	ldr	r1, [pc, #368]	; (8000558 <GPIO_Init+0x314>)
 80003e8:	193b      	adds	r3, r7, r4
 80003ea:	781b      	ldrb	r3, [r3, #0]
 80003ec:	4302      	orrs	r2, r0
 80003ee:	3318      	adds	r3, #24
 80003f0:	009b      	lsls	r3, r3, #2
 80003f2:	505a      	str	r2, [r3, r1]
		//enable EXTI interrupt delivery using IMR
		EXTI->EXTI_IMR1 |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003f4:	4a58      	ldr	r2, [pc, #352]	; (8000558 <GPIO_Init+0x314>)
 80003f6:	2380      	movs	r3, #128	; 0x80
 80003f8:	58d3      	ldr	r3, [r2, r3]
 80003fa:	687a      	ldr	r2, [r7, #4]
 80003fc:	7912      	ldrb	r2, [r2, #4]
 80003fe:	0011      	movs	r1, r2
 8000400:	2201      	movs	r2, #1
 8000402:	408a      	lsls	r2, r1
 8000404:	4954      	ldr	r1, [pc, #336]	; (8000558 <GPIO_Init+0x314>)
 8000406:	4313      	orrs	r3, r2
 8000408:	2280      	movs	r2, #128	; 0x80
 800040a:	508b      	str	r3, [r1, r2]
	}
	temp = ((pGPIOHandle->GPIO_PinConfig.GPIO_PinOutType) << (pGPIOHandle->GPIO_PinConfig.GPIO_PinOutType));
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	799b      	ldrb	r3, [r3, #6]
 8000410:	001a      	movs	r2, r3
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	799b      	ldrb	r3, [r3, #6]
 8000416:	409a      	lsls	r2, r3
 8000418:	0013      	movs	r3, r2
 800041a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->GPIOx_OTYPER &= ~(0x1 << pGPIOHandle->pGPIOx->GPIOx_OTYPER);
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	685b      	ldr	r3, [r3, #4]
 8000422:	2201      	movs	r2, #1
 8000424:	409a      	lsls	r2, r3
 8000426:	0013      	movs	r3, r2
 8000428:	43d9      	mvns	r1, r3
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	685a      	ldr	r2, [r3, #4]
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	400a      	ands	r2, r1
 8000436:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->GPIOx_OTYPER |= (temp);
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	6859      	ldr	r1, [r3, #4]
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	697a      	ldr	r2, [r7, #20]
 8000444:	430a      	orrs	r2, r1
 8000446:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000448:	2300      	movs	r3, #0
 800044a:	617b      	str	r3, [r7, #20]

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOutSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	79db      	ldrb	r3, [r3, #7]
 8000450:	001a      	movs	r2, r3
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	791b      	ldrb	r3, [r3, #4]
 8000456:	005b      	lsls	r3, r3, #1
 8000458:	409a      	lsls	r2, r3
 800045a:	0013      	movs	r3, r2
 800045c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->GPIOx_OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	681b      	ldr	r3, [r3, #0]
 8000462:	689a      	ldr	r2, [r3, #8]
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	791b      	ldrb	r3, [r3, #4]
 8000468:	0019      	movs	r1, r3
 800046a:	2303      	movs	r3, #3
 800046c:	408b      	lsls	r3, r1
 800046e:	43db      	mvns	r3, r3
 8000470:	0019      	movs	r1, r3
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	681b      	ldr	r3, [r3, #0]
 8000476:	400a      	ands	r2, r1
 8000478:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->GPIOx_OSPEEDR |= temp;
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	681b      	ldr	r3, [r3, #0]
 800047e:	6899      	ldr	r1, [r3, #8]
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	681b      	ldr	r3, [r3, #0]
 8000484:	697a      	ldr	r2, [r7, #20]
 8000486:	430a      	orrs	r2, r1
 8000488:	609a      	str	r2, [r3, #8]
	temp = 0;
 800048a:	2300      	movs	r3, #0
 800048c:	617b      	str	r3, [r7, #20]

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPd << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPd));
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	7a1b      	ldrb	r3, [r3, #8]
 8000492:	001a      	movs	r2, r3
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	7a1b      	ldrb	r3, [r3, #8]
 8000498:	005b      	lsls	r3, r3, #1
 800049a:	409a      	lsls	r2, r3
 800049c:	0013      	movs	r3, r2
 800049e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->GPIOx_PUPDR &= ~(3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	68da      	ldr	r2, [r3, #12]
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	791b      	ldrb	r3, [r3, #4]
 80004aa:	0019      	movs	r1, r3
 80004ac:	2303      	movs	r3, #3
 80004ae:	408b      	lsls	r3, r1
 80004b0:	43db      	mvns	r3, r3
 80004b2:	0019      	movs	r1, r3
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	400a      	ands	r2, r1
 80004ba:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->GPIOx_PUPDR |= temp;
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	68d9      	ldr	r1, [r3, #12]
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	697a      	ldr	r2, [r7, #20]
 80004c8:	430a      	orrs	r2, r1
 80004ca:	60da      	str	r2, [r3, #12]
	temp = 0 ;
 80004cc:	2300      	movs	r3, #0
 80004ce:	617b      	str	r3, [r7, #20]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_PIN_MODE_ALT)
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	795b      	ldrb	r3, [r3, #5]
 80004d4:	2b02      	cmp	r3, #2
 80004d6:	d13b      	bne.n	8000550 <GPIO_Init+0x30c>
	{
		uint8_t temp1, temp2;
		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8);
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	791a      	ldrb	r2, [r3, #4]
 80004dc:	2410      	movs	r4, #16
 80004de:	193b      	adds	r3, r7, r4
 80004e0:	08d2      	lsrs	r2, r2, #3
 80004e2:	701a      	strb	r2, [r3, #0]
		temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8);
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	791a      	ldrb	r2, [r3, #4]
 80004e8:	250f      	movs	r5, #15
 80004ea:	197b      	adds	r3, r7, r5
 80004ec:	2107      	movs	r1, #7
 80004ee:	400a      	ands	r2, r1
 80004f0:	701a      	strb	r2, [r3, #0]
		pGPIOHandle->pGPIOx->GPIOx_AFR[temp1] &= ~(0xF << (4 * temp2));
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	193a      	adds	r2, r7, r4
 80004f8:	7812      	ldrb	r2, [r2, #0]
 80004fa:	3208      	adds	r2, #8
 80004fc:	0092      	lsls	r2, r2, #2
 80004fe:	58d1      	ldr	r1, [r2, r3]
 8000500:	197b      	adds	r3, r7, r5
 8000502:	781b      	ldrb	r3, [r3, #0]
 8000504:	009b      	lsls	r3, r3, #2
 8000506:	220f      	movs	r2, #15
 8000508:	409a      	lsls	r2, r3
 800050a:	0013      	movs	r3, r2
 800050c:	43db      	mvns	r3, r3
 800050e:	0018      	movs	r0, r3
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	193a      	adds	r2, r7, r4
 8000516:	7812      	ldrb	r2, [r2, #0]
 8000518:	4001      	ands	r1, r0
 800051a:	3208      	adds	r2, #8
 800051c:	0092      	lsls	r2, r2, #2
 800051e:	50d1      	str	r1, [r2, r3]
		pGPIOHandle->pGPIOx->GPIOx_AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFn << (4 * temp2));
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	193a      	adds	r2, r7, r4
 8000526:	7812      	ldrb	r2, [r2, #0]
 8000528:	3208      	adds	r2, #8
 800052a:	0092      	lsls	r2, r2, #2
 800052c:	58d1      	ldr	r1, [r2, r3]
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	7a5b      	ldrb	r3, [r3, #9]
 8000532:	001a      	movs	r2, r3
 8000534:	197b      	adds	r3, r7, r5
 8000536:	781b      	ldrb	r3, [r3, #0]
 8000538:	009b      	lsls	r3, r3, #2
 800053a:	409a      	lsls	r2, r3
 800053c:	0013      	movs	r3, r2
 800053e:	0018      	movs	r0, r3
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	193a      	adds	r2, r7, r4
 8000546:	7812      	ldrb	r2, [r2, #0]
 8000548:	4301      	orrs	r1, r0
 800054a:	3208      	adds	r2, #8
 800054c:	0092      	lsls	r2, r2, #2
 800054e:	50d1      	str	r1, [r2, r3]
	}
}
 8000550:	46c0      	nop			; (mov r8, r8)
 8000552:	46bd      	mov	sp, r7
 8000554:	b006      	add	sp, #24
 8000556:	bdb0      	pop	{r4, r5, r7, pc}
 8000558:	40021800 	.word	0x40021800
 800055c:	50000400 	.word	0x50000400
 8000560:	50000800 	.word	0x50000800
 8000564:	50000c00 	.word	0x50000c00
 8000568:	50001400 	.word	0x50001400

0800056c <GPIO_Reset>:
 * @return 			- none
 *
 * @Note			- none
 */
void GPIO_Reset(GPIO_RegDef_t *pGPIOx)
{
 800056c:	b580      	push	{r7, lr}
 800056e:	b082      	sub	sp, #8
 8000570:	af00      	add	r7, sp, #0
 8000572:	6078      	str	r0, [r7, #4]
	if (pGPIOx == GPIOA) {	GPIOA_REG_RESET();	}
 8000574:	687a      	ldr	r2, [r7, #4]
 8000576:	23a0      	movs	r3, #160	; 0xa0
 8000578:	05db      	lsls	r3, r3, #23
 800057a:	429a      	cmp	r2, r3
 800057c:	d10c      	bne.n	8000598 <GPIO_Reset+0x2c>
 800057e:	4b32      	ldr	r3, [pc, #200]	; (8000648 <GPIO_Reset+0xdc>)
 8000580:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000582:	4b31      	ldr	r3, [pc, #196]	; (8000648 <GPIO_Reset+0xdc>)
 8000584:	2101      	movs	r1, #1
 8000586:	430a      	orrs	r2, r1
 8000588:	625a      	str	r2, [r3, #36]	; 0x24
 800058a:	4b2f      	ldr	r3, [pc, #188]	; (8000648 <GPIO_Reset+0xdc>)
 800058c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800058e:	4b2e      	ldr	r3, [pc, #184]	; (8000648 <GPIO_Reset+0xdc>)
 8000590:	2101      	movs	r1, #1
 8000592:	438a      	bics	r2, r1
 8000594:	625a      	str	r2, [r3, #36]	; 0x24
	else if (pGPIOx == GPIOB) {	GPIOB_REG_RESET();	}
	else if (pGPIOx == GPIOC) {	GPIOC_REG_RESET();	}
	else if (pGPIOx == GPIOD) {	GPIOD_REG_RESET();	}
	else if (pGPIOx == GPIOE) {	GPIOE_REG_RESET();	}
	else if (pGPIOx == GPIOF) {	GPIOF_REG_RESET();	}
}
 8000596:	e053      	b.n	8000640 <GPIO_Reset+0xd4>
	else if (pGPIOx == GPIOB) {	GPIOB_REG_RESET();	}
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	4a2c      	ldr	r2, [pc, #176]	; (800064c <GPIO_Reset+0xe0>)
 800059c:	4293      	cmp	r3, r2
 800059e:	d10c      	bne.n	80005ba <GPIO_Reset+0x4e>
 80005a0:	4b29      	ldr	r3, [pc, #164]	; (8000648 <GPIO_Reset+0xdc>)
 80005a2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80005a4:	4b28      	ldr	r3, [pc, #160]	; (8000648 <GPIO_Reset+0xdc>)
 80005a6:	2102      	movs	r1, #2
 80005a8:	430a      	orrs	r2, r1
 80005aa:	625a      	str	r2, [r3, #36]	; 0x24
 80005ac:	4b26      	ldr	r3, [pc, #152]	; (8000648 <GPIO_Reset+0xdc>)
 80005ae:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80005b0:	4b25      	ldr	r3, [pc, #148]	; (8000648 <GPIO_Reset+0xdc>)
 80005b2:	2102      	movs	r1, #2
 80005b4:	438a      	bics	r2, r1
 80005b6:	625a      	str	r2, [r3, #36]	; 0x24
}
 80005b8:	e042      	b.n	8000640 <GPIO_Reset+0xd4>
	else if (pGPIOx == GPIOC) {	GPIOC_REG_RESET();	}
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	4a24      	ldr	r2, [pc, #144]	; (8000650 <GPIO_Reset+0xe4>)
 80005be:	4293      	cmp	r3, r2
 80005c0:	d10c      	bne.n	80005dc <GPIO_Reset+0x70>
 80005c2:	4b21      	ldr	r3, [pc, #132]	; (8000648 <GPIO_Reset+0xdc>)
 80005c4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80005c6:	4b20      	ldr	r3, [pc, #128]	; (8000648 <GPIO_Reset+0xdc>)
 80005c8:	2104      	movs	r1, #4
 80005ca:	430a      	orrs	r2, r1
 80005cc:	625a      	str	r2, [r3, #36]	; 0x24
 80005ce:	4b1e      	ldr	r3, [pc, #120]	; (8000648 <GPIO_Reset+0xdc>)
 80005d0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80005d2:	4b1d      	ldr	r3, [pc, #116]	; (8000648 <GPIO_Reset+0xdc>)
 80005d4:	2104      	movs	r1, #4
 80005d6:	438a      	bics	r2, r1
 80005d8:	625a      	str	r2, [r3, #36]	; 0x24
}
 80005da:	e031      	b.n	8000640 <GPIO_Reset+0xd4>
	else if (pGPIOx == GPIOD) {	GPIOD_REG_RESET();	}
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	4a1d      	ldr	r2, [pc, #116]	; (8000654 <GPIO_Reset+0xe8>)
 80005e0:	4293      	cmp	r3, r2
 80005e2:	d10c      	bne.n	80005fe <GPIO_Reset+0x92>
 80005e4:	4b18      	ldr	r3, [pc, #96]	; (8000648 <GPIO_Reset+0xdc>)
 80005e6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80005e8:	4b17      	ldr	r3, [pc, #92]	; (8000648 <GPIO_Reset+0xdc>)
 80005ea:	2108      	movs	r1, #8
 80005ec:	430a      	orrs	r2, r1
 80005ee:	625a      	str	r2, [r3, #36]	; 0x24
 80005f0:	4b15      	ldr	r3, [pc, #84]	; (8000648 <GPIO_Reset+0xdc>)
 80005f2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80005f4:	4b14      	ldr	r3, [pc, #80]	; (8000648 <GPIO_Reset+0xdc>)
 80005f6:	2108      	movs	r1, #8
 80005f8:	438a      	bics	r2, r1
 80005fa:	625a      	str	r2, [r3, #36]	; 0x24
}
 80005fc:	e020      	b.n	8000640 <GPIO_Reset+0xd4>
	else if (pGPIOx == GPIOE) {	GPIOE_REG_RESET();	}
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	4a15      	ldr	r2, [pc, #84]	; (8000658 <GPIO_Reset+0xec>)
 8000602:	4293      	cmp	r3, r2
 8000604:	d10c      	bne.n	8000620 <GPIO_Reset+0xb4>
 8000606:	4b10      	ldr	r3, [pc, #64]	; (8000648 <GPIO_Reset+0xdc>)
 8000608:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800060a:	4b0f      	ldr	r3, [pc, #60]	; (8000648 <GPIO_Reset+0xdc>)
 800060c:	2110      	movs	r1, #16
 800060e:	430a      	orrs	r2, r1
 8000610:	625a      	str	r2, [r3, #36]	; 0x24
 8000612:	4b0d      	ldr	r3, [pc, #52]	; (8000648 <GPIO_Reset+0xdc>)
 8000614:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000616:	4b0c      	ldr	r3, [pc, #48]	; (8000648 <GPIO_Reset+0xdc>)
 8000618:	2110      	movs	r1, #16
 800061a:	438a      	bics	r2, r1
 800061c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800061e:	e00f      	b.n	8000640 <GPIO_Reset+0xd4>
	else if (pGPIOx == GPIOF) {	GPIOF_REG_RESET();	}
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	4a0e      	ldr	r2, [pc, #56]	; (800065c <GPIO_Reset+0xf0>)
 8000624:	4293      	cmp	r3, r2
 8000626:	d10b      	bne.n	8000640 <GPIO_Reset+0xd4>
 8000628:	4b07      	ldr	r3, [pc, #28]	; (8000648 <GPIO_Reset+0xdc>)
 800062a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800062c:	4b06      	ldr	r3, [pc, #24]	; (8000648 <GPIO_Reset+0xdc>)
 800062e:	2120      	movs	r1, #32
 8000630:	430a      	orrs	r2, r1
 8000632:	625a      	str	r2, [r3, #36]	; 0x24
 8000634:	4b04      	ldr	r3, [pc, #16]	; (8000648 <GPIO_Reset+0xdc>)
 8000636:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000638:	4b03      	ldr	r3, [pc, #12]	; (8000648 <GPIO_Reset+0xdc>)
 800063a:	2120      	movs	r1, #32
 800063c:	438a      	bics	r2, r1
 800063e:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000640:	46c0      	nop			; (mov r8, r8)
 8000642:	46bd      	mov	sp, r7
 8000644:	b002      	add	sp, #8
 8000646:	bd80      	pop	{r7, pc}
 8000648:	40021000 	.word	0x40021000
 800064c:	50000400 	.word	0x50000400
 8000650:	50000800 	.word	0x50000800
 8000654:	50000c00 	.word	0x50000c00
 8000658:	50001000 	.word	0x50001000
 800065c:	50001400 	.word	0x50001400

08000660 <GPIO_TogglePin>:
 * @return 			- none
 *
 * @Note			- none
 */
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000660:	b580      	push	{r7, lr}
 8000662:	b082      	sub	sp, #8
 8000664:	af00      	add	r7, sp, #0
 8000666:	6078      	str	r0, [r7, #4]
 8000668:	000a      	movs	r2, r1
 800066a:	1cfb      	adds	r3, r7, #3
 800066c:	701a      	strb	r2, [r3, #0]
	pGPIOx->GPIOx_ODR ^= (1 << PinNumber);
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	695b      	ldr	r3, [r3, #20]
 8000672:	1cfa      	adds	r2, r7, #3
 8000674:	7812      	ldrb	r2, [r2, #0]
 8000676:	2101      	movs	r1, #1
 8000678:	4091      	lsls	r1, r2
 800067a:	000a      	movs	r2, r1
 800067c:	405a      	eors	r2, r3
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	615a      	str	r2, [r3, #20]
}
 8000682:	46c0      	nop			; (mov r8, r8)
 8000684:	46bd      	mov	sp, r7
 8000686:	b002      	add	sp, #8
 8000688:	bd80      	pop	{r7, pc}
	...

0800068c <GPIO_IRQInterruptConfig>:
 * @return 			- none
 *
 * @Note			- none
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t E_D)
{
 800068c:	b580      	push	{r7, lr}
 800068e:	b082      	sub	sp, #8
 8000690:	af00      	add	r7, sp, #0
 8000692:	0002      	movs	r2, r0
 8000694:	1dfb      	adds	r3, r7, #7
 8000696:	701a      	strb	r2, [r3, #0]
 8000698:	1dbb      	adds	r3, r7, #6
 800069a:	1c0a      	adds	r2, r1, #0
 800069c:	701a      	strb	r2, [r3, #0]
	if(E_D == ENABLE)
 800069e:	1dbb      	adds	r3, r7, #6
 80006a0:	781b      	ldrb	r3, [r3, #0]
 80006a2:	2b01      	cmp	r3, #1
 80006a4:	d10b      	bne.n	80006be <GPIO_IRQInterruptConfig+0x32>
	{
		*NVIC_ISER |= (1 << IRQNumber);
 80006a6:	4b0d      	ldr	r3, [pc, #52]	; (80006dc <GPIO_IRQInterruptConfig+0x50>)
 80006a8:	681a      	ldr	r2, [r3, #0]
 80006aa:	1dfb      	adds	r3, r7, #7
 80006ac:	781b      	ldrb	r3, [r3, #0]
 80006ae:	2101      	movs	r1, #1
 80006b0:	4099      	lsls	r1, r3
 80006b2:	000b      	movs	r3, r1
 80006b4:	0019      	movs	r1, r3
 80006b6:	4b09      	ldr	r3, [pc, #36]	; (80006dc <GPIO_IRQInterruptConfig+0x50>)
 80006b8:	430a      	orrs	r2, r1
 80006ba:	601a      	str	r2, [r3, #0]
	}
	else
	{
		*NVIC_ICER |= (1 << IRQNumber);
	}
}
 80006bc:	e00a      	b.n	80006d4 <GPIO_IRQInterruptConfig+0x48>
		*NVIC_ICER |= (1 << IRQNumber);
 80006be:	4b08      	ldr	r3, [pc, #32]	; (80006e0 <GPIO_IRQInterruptConfig+0x54>)
 80006c0:	681a      	ldr	r2, [r3, #0]
 80006c2:	1dfb      	adds	r3, r7, #7
 80006c4:	781b      	ldrb	r3, [r3, #0]
 80006c6:	2101      	movs	r1, #1
 80006c8:	4099      	lsls	r1, r3
 80006ca:	000b      	movs	r3, r1
 80006cc:	0019      	movs	r1, r3
 80006ce:	4b04      	ldr	r3, [pc, #16]	; (80006e0 <GPIO_IRQInterruptConfig+0x54>)
 80006d0:	430a      	orrs	r2, r1
 80006d2:	601a      	str	r2, [r3, #0]
}
 80006d4:	46c0      	nop			; (mov r8, r8)
 80006d6:	46bd      	mov	sp, r7
 80006d8:	b002      	add	sp, #8
 80006da:	bd80      	pop	{r7, pc}
 80006dc:	e000e100 	.word	0xe000e100
 80006e0:	e000e180 	.word	0xe000e180

080006e4 <GPIO_IRQPriorityConfig>:
 * @return 			- none
 *
 * @Note			- none
 */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint8_t IRQPriority)
{
 80006e4:	b590      	push	{r4, r7, lr}
 80006e6:	b085      	sub	sp, #20
 80006e8:	af00      	add	r7, sp, #0
 80006ea:	0002      	movs	r2, r0
 80006ec:	1dfb      	adds	r3, r7, #7
 80006ee:	701a      	strb	r2, [r3, #0]
 80006f0:	1dbb      	adds	r3, r7, #6
 80006f2:	1c0a      	adds	r2, r1, #0
 80006f4:	701a      	strb	r2, [r3, #0]
	uint8_t IPRx = IRQNumber / 4;
 80006f6:	200f      	movs	r0, #15
 80006f8:	183b      	adds	r3, r7, r0
 80006fa:	1dfa      	adds	r2, r7, #7
 80006fc:	7812      	ldrb	r2, [r2, #0]
 80006fe:	0892      	lsrs	r2, r2, #2
 8000700:	701a      	strb	r2, [r3, #0]
	uint8_t IPRx_sec = IRQNumber % 4;
 8000702:	240e      	movs	r4, #14
 8000704:	193b      	adds	r3, r7, r4
 8000706:	1dfa      	adds	r2, r7, #7
 8000708:	7812      	ldrb	r2, [r2, #0]
 800070a:	2103      	movs	r1, #3
 800070c:	400a      	ands	r2, r1
 800070e:	701a      	strb	r2, [r3, #0]
	uint8_t shift_value = (IPRx_sec * 8) + 6;//Six comes from IPR implementation of cortex-m0+ processor
 8000710:	193b      	adds	r3, r7, r4
 8000712:	781b      	ldrb	r3, [r3, #0]
 8000714:	00db      	lsls	r3, r3, #3
 8000716:	b2da      	uxtb	r2, r3
 8000718:	240d      	movs	r4, #13
 800071a:	193b      	adds	r3, r7, r4
 800071c:	3206      	adds	r2, #6
 800071e:	701a      	strb	r2, [r3, #0]
	*(NVIC_IPR + IPRx) |= (IRQPriority << shift_value);
 8000720:	183b      	adds	r3, r7, r0
 8000722:	781b      	ldrb	r3, [r3, #0]
 8000724:	009b      	lsls	r3, r3, #2
 8000726:	4a0b      	ldr	r2, [pc, #44]	; (8000754 <GPIO_IRQPriorityConfig+0x70>)
 8000728:	4694      	mov	ip, r2
 800072a:	4463      	add	r3, ip
 800072c:	681a      	ldr	r2, [r3, #0]
 800072e:	1dbb      	adds	r3, r7, #6
 8000730:	7819      	ldrb	r1, [r3, #0]
 8000732:	193b      	adds	r3, r7, r4
 8000734:	781b      	ldrb	r3, [r3, #0]
 8000736:	4099      	lsls	r1, r3
 8000738:	000b      	movs	r3, r1
 800073a:	0019      	movs	r1, r3
 800073c:	183b      	adds	r3, r7, r0
 800073e:	781b      	ldrb	r3, [r3, #0]
 8000740:	009b      	lsls	r3, r3, #2
 8000742:	4804      	ldr	r0, [pc, #16]	; (8000754 <GPIO_IRQPriorityConfig+0x70>)
 8000744:	4684      	mov	ip, r0
 8000746:	4463      	add	r3, ip
 8000748:	430a      	orrs	r2, r1
 800074a:	601a      	str	r2, [r3, #0]
}
 800074c:	46c0      	nop			; (mov r8, r8)
 800074e:	46bd      	mov	sp, r7
 8000750:	b005      	add	sp, #20
 8000752:	bd90      	pop	{r4, r7, pc}
 8000754:	e000e400 	.word	0xe000e400

08000758 <GPIO_IRQHandling>:
 * @return 			- none
 *
 * @Note			- none
 */
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000758:	b580      	push	{r7, lr}
 800075a:	b082      	sub	sp, #8
 800075c:	af00      	add	r7, sp, #0
 800075e:	0002      	movs	r2, r0
 8000760:	1dfb      	adds	r3, r7, #7
 8000762:	701a      	strb	r2, [r3, #0]
	if (EXTI->EXTI_RPR1 & (1 << PinNumber))
 8000764:	4b16      	ldr	r3, [pc, #88]	; (80007c0 <GPIO_IRQHandling+0x68>)
 8000766:	68db      	ldr	r3, [r3, #12]
 8000768:	1dfa      	adds	r2, r7, #7
 800076a:	7812      	ldrb	r2, [r2, #0]
 800076c:	2101      	movs	r1, #1
 800076e:	4091      	lsls	r1, r2
 8000770:	000a      	movs	r2, r1
 8000772:	4013      	ands	r3, r2
 8000774:	d00b      	beq.n	800078e <GPIO_IRQHandling+0x36>
	{
		EXTI->EXTI_RPR1 |= (1 << PinNumber);
 8000776:	4b12      	ldr	r3, [pc, #72]	; (80007c0 <GPIO_IRQHandling+0x68>)
 8000778:	68da      	ldr	r2, [r3, #12]
 800077a:	1dfb      	adds	r3, r7, #7
 800077c:	781b      	ldrb	r3, [r3, #0]
 800077e:	2101      	movs	r1, #1
 8000780:	4099      	lsls	r1, r3
 8000782:	000b      	movs	r3, r1
 8000784:	0019      	movs	r1, r3
 8000786:	4b0e      	ldr	r3, [pc, #56]	; (80007c0 <GPIO_IRQHandling+0x68>)
 8000788:	430a      	orrs	r2, r1
 800078a:	60da      	str	r2, [r3, #12]
	}
	else if (EXTI->EXTI_FPR1 & (1 << PinNumber))
	{
		EXTI->EXTI_FPR1 |= (1 << PinNumber);
	}
}
 800078c:	e013      	b.n	80007b6 <GPIO_IRQHandling+0x5e>
	else if (EXTI->EXTI_FPR1 & (1 << PinNumber))
 800078e:	4b0c      	ldr	r3, [pc, #48]	; (80007c0 <GPIO_IRQHandling+0x68>)
 8000790:	691b      	ldr	r3, [r3, #16]
 8000792:	1dfa      	adds	r2, r7, #7
 8000794:	7812      	ldrb	r2, [r2, #0]
 8000796:	2101      	movs	r1, #1
 8000798:	4091      	lsls	r1, r2
 800079a:	000a      	movs	r2, r1
 800079c:	4013      	ands	r3, r2
 800079e:	d00a      	beq.n	80007b6 <GPIO_IRQHandling+0x5e>
		EXTI->EXTI_FPR1 |= (1 << PinNumber);
 80007a0:	4b07      	ldr	r3, [pc, #28]	; (80007c0 <GPIO_IRQHandling+0x68>)
 80007a2:	691a      	ldr	r2, [r3, #16]
 80007a4:	1dfb      	adds	r3, r7, #7
 80007a6:	781b      	ldrb	r3, [r3, #0]
 80007a8:	2101      	movs	r1, #1
 80007aa:	4099      	lsls	r1, r3
 80007ac:	000b      	movs	r3, r1
 80007ae:	0019      	movs	r1, r3
 80007b0:	4b03      	ldr	r3, [pc, #12]	; (80007c0 <GPIO_IRQHandling+0x68>)
 80007b2:	430a      	orrs	r2, r1
 80007b4:	611a      	str	r2, [r3, #16]
}
 80007b6:	46c0      	nop			; (mov r8, r8)
 80007b8:	46bd      	mov	sp, r7
 80007ba:	b002      	add	sp, #8
 80007bc:	bd80      	pop	{r7, pc}
 80007be:	46c0      	nop			; (mov r8, r8)
 80007c0:	40021800 	.word	0x40021800

080007c4 <main>:
#include <stdio.h>
#include <string.h>
#include "stm32g0b1re_gpio_driver.h"

int main()
{
 80007c4:	b590      	push	{r4, r7, lr}
 80007c6:	b087      	sub	sp, #28
 80007c8:	af00      	add	r7, sp, #0
	GPIO_Handle_t LedPin;
	memset(&LedPin,0,sizeof(LedPin));
 80007ca:	240c      	movs	r4, #12
 80007cc:	193b      	adds	r3, r7, r4
 80007ce:	220c      	movs	r2, #12
 80007d0:	2100      	movs	r1, #0
 80007d2:	0018      	movs	r0, r3
 80007d4:	f000 f881 	bl	80008da <memset>
	LedPin.pGPIOx = GPIOA;
 80007d8:	193b      	adds	r3, r7, r4
 80007da:	22a0      	movs	r2, #160	; 0xa0
 80007dc:	05d2      	lsls	r2, r2, #23
 80007de:	601a      	str	r2, [r3, #0]
	LedPin.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_5;
 80007e0:	193b      	adds	r3, r7, r4
 80007e2:	2205      	movs	r2, #5
 80007e4:	711a      	strb	r2, [r3, #4]
	LedPin.GPIO_PinConfig.GPIO_PinMode = GPIO_PIN_MODE_OUT;
 80007e6:	193b      	adds	r3, r7, r4
 80007e8:	2201      	movs	r2, #1
 80007ea:	715a      	strb	r2, [r3, #5]
	LedPin.GPIO_PinConfig.GPIO_PinOutType = GPIO_OUT_TYPE_PP;
 80007ec:	193b      	adds	r3, r7, r4
 80007ee:	2200      	movs	r2, #0
 80007f0:	719a      	strb	r2, [r3, #6]
	LedPin.GPIO_PinConfig.GPIO_PinPuPd = GPIO_NO_PUPD;
 80007f2:	193b      	adds	r3, r7, r4
 80007f4:	2200      	movs	r2, #0
 80007f6:	721a      	strb	r2, [r3, #8]
	GPIO_ClkCtrl(GPIOA, ENABLE);
 80007f8:	23a0      	movs	r3, #160	; 0xa0
 80007fa:	05db      	lsls	r3, r3, #23
 80007fc:	2101      	movs	r1, #1
 80007fe:	0018      	movs	r0, r3
 8000800:	f7ff fc80 	bl	8000104 <GPIO_ClkCtrl>
	GPIO_Reset(GPIOA);
 8000804:	23a0      	movs	r3, #160	; 0xa0
 8000806:	05db      	lsls	r3, r3, #23
 8000808:	0018      	movs	r0, r3
 800080a:	f7ff feaf 	bl	800056c <GPIO_Reset>
	GPIO_Init(&LedPin);
 800080e:	193b      	adds	r3, r7, r4
 8000810:	0018      	movs	r0, r3
 8000812:	f7ff fd17 	bl	8000244 <GPIO_Init>

	GPIO_Handle_t UsrPin;
	memset(&UsrPin,0,sizeof(UsrPin));
 8000816:	003b      	movs	r3, r7
 8000818:	220c      	movs	r2, #12
 800081a:	2100      	movs	r1, #0
 800081c:	0018      	movs	r0, r3
 800081e:	f000 f85c 	bl	80008da <memset>
	UsrPin.pGPIOx = GPIOC;
 8000822:	003b      	movs	r3, r7
 8000824:	4a10      	ldr	r2, [pc, #64]	; (8000868 <main+0xa4>)
 8000826:	601a      	str	r2, [r3, #0]
	UsrPin.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_13;
 8000828:	003b      	movs	r3, r7
 800082a:	220d      	movs	r2, #13
 800082c:	711a      	strb	r2, [r3, #4]
	UsrPin.GPIO_PinConfig.GPIO_PinMode = GPIO_PIN_MODE_INT_FL;
 800082e:	003b      	movs	r3, r7
 8000830:	2205      	movs	r2, #5
 8000832:	715a      	strb	r2, [r3, #5]
	UsrPin.GPIO_PinConfig.GPIO_PinPuPd = GPIO_NO_PUPD;
 8000834:	003b      	movs	r3, r7
 8000836:	2200      	movs	r2, #0
 8000838:	721a      	strb	r2, [r3, #8]
	GPIO_ClkCtrl(GPIOC, ENABLE);
 800083a:	4b0b      	ldr	r3, [pc, #44]	; (8000868 <main+0xa4>)
 800083c:	2101      	movs	r1, #1
 800083e:	0018      	movs	r0, r3
 8000840:	f7ff fc60 	bl	8000104 <GPIO_ClkCtrl>
	GPIO_Reset(GPIOC);
 8000844:	4b08      	ldr	r3, [pc, #32]	; (8000868 <main+0xa4>)
 8000846:	0018      	movs	r0, r3
 8000848:	f7ff fe90 	bl	800056c <GPIO_Reset>
	GPIO_Init(&UsrPin);
 800084c:	003b      	movs	r3, r7
 800084e:	0018      	movs	r0, r3
 8000850:	f7ff fcf8 	bl	8000244 <GPIO_Init>

	GPIO_IRQPriorityConfig(IRQ_NUM_EXTI4_15, PRIORITY_1);
 8000854:	2101      	movs	r1, #1
 8000856:	2007      	movs	r0, #7
 8000858:	f7ff ff44 	bl	80006e4 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NUM_EXTI4_15, ENABLE);
 800085c:	2101      	movs	r1, #1
 800085e:	2007      	movs	r0, #7
 8000860:	f7ff ff14 	bl	800068c <GPIO_IRQInterruptConfig>


	while(1);
 8000864:	e7fe      	b.n	8000864 <main+0xa0>
 8000866:	46c0      	nop			; (mov r8, r8)
 8000868:	50000800 	.word	0x50000800

0800086c <EXTI4_15_IRQHandler>:
}

void EXTI4_15_IRQHandler(void)
{
 800086c:	b580      	push	{r7, lr}
 800086e:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_13);
 8000870:	200d      	movs	r0, #13
 8000872:	f7ff ff71 	bl	8000758 <GPIO_IRQHandling>
	GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 8000876:	23a0      	movs	r3, #160	; 0xa0
 8000878:	05db      	lsls	r3, r3, #23
 800087a:	2105      	movs	r1, #5
 800087c:	0018      	movs	r0, r3
 800087e:	f7ff feef 	bl	8000660 <GPIO_TogglePin>
}
 8000882:	46c0      	nop			; (mov r8, r8)
 8000884:	46bd      	mov	sp, r7
 8000886:	bd80      	pop	{r7, pc}

08000888 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000888:	480d      	ldr	r0, [pc, #52]	; (80008c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800088a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800088c:	e000      	b.n	8000890 <Reset_Handler+0x8>
 800088e:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000890:	480c      	ldr	r0, [pc, #48]	; (80008c4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000892:	490d      	ldr	r1, [pc, #52]	; (80008c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000894:	4a0d      	ldr	r2, [pc, #52]	; (80008cc <LoopForever+0xe>)
  movs r3, #0
 8000896:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000898:	e002      	b.n	80008a0 <LoopCopyDataInit>

0800089a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800089a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800089c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800089e:	3304      	adds	r3, #4

080008a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80008a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80008a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80008a4:	d3f9      	bcc.n	800089a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80008a6:	4a0a      	ldr	r2, [pc, #40]	; (80008d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80008a8:	4c0a      	ldr	r4, [pc, #40]	; (80008d4 <LoopForever+0x16>)
  movs r3, #0
 80008aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80008ac:	e001      	b.n	80008b2 <LoopFillZerobss>

080008ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80008ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80008b0:	3204      	adds	r2, #4

080008b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80008b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80008b4:	d3fb      	bcc.n	80008ae <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80008b6:	f000 f819 	bl	80008ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80008ba:	f7ff ff83 	bl	80007c4 <main>

080008be <LoopForever>:

LoopForever:
  b LoopForever
 80008be:	e7fe      	b.n	80008be <LoopForever>
  ldr   r0, =_estack
 80008c0:	20024000 	.word	0x20024000
  ldr r0, =_sdata
 80008c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80008c8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80008cc:	08000954 	.word	0x08000954
  ldr r2, =_sbss
 80008d0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80008d4:	2000001c 	.word	0x2000001c

080008d8 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80008d8:	e7fe      	b.n	80008d8 <ADC_COMP_IRQHandler>

080008da <memset>:
 80008da:	0003      	movs	r3, r0
 80008dc:	1882      	adds	r2, r0, r2
 80008de:	4293      	cmp	r3, r2
 80008e0:	d100      	bne.n	80008e4 <memset+0xa>
 80008e2:	4770      	bx	lr
 80008e4:	7019      	strb	r1, [r3, #0]
 80008e6:	3301      	adds	r3, #1
 80008e8:	e7f9      	b.n	80008de <memset+0x4>
	...

080008ec <__libc_init_array>:
 80008ec:	b570      	push	{r4, r5, r6, lr}
 80008ee:	2600      	movs	r6, #0
 80008f0:	4c0c      	ldr	r4, [pc, #48]	; (8000924 <__libc_init_array+0x38>)
 80008f2:	4d0d      	ldr	r5, [pc, #52]	; (8000928 <__libc_init_array+0x3c>)
 80008f4:	1b64      	subs	r4, r4, r5
 80008f6:	10a4      	asrs	r4, r4, #2
 80008f8:	42a6      	cmp	r6, r4
 80008fa:	d109      	bne.n	8000910 <__libc_init_array+0x24>
 80008fc:	2600      	movs	r6, #0
 80008fe:	f000 f819 	bl	8000934 <_init>
 8000902:	4c0a      	ldr	r4, [pc, #40]	; (800092c <__libc_init_array+0x40>)
 8000904:	4d0a      	ldr	r5, [pc, #40]	; (8000930 <__libc_init_array+0x44>)
 8000906:	1b64      	subs	r4, r4, r5
 8000908:	10a4      	asrs	r4, r4, #2
 800090a:	42a6      	cmp	r6, r4
 800090c:	d105      	bne.n	800091a <__libc_init_array+0x2e>
 800090e:	bd70      	pop	{r4, r5, r6, pc}
 8000910:	00b3      	lsls	r3, r6, #2
 8000912:	58eb      	ldr	r3, [r5, r3]
 8000914:	4798      	blx	r3
 8000916:	3601      	adds	r6, #1
 8000918:	e7ee      	b.n	80008f8 <__libc_init_array+0xc>
 800091a:	00b3      	lsls	r3, r6, #2
 800091c:	58eb      	ldr	r3, [r5, r3]
 800091e:	4798      	blx	r3
 8000920:	3601      	adds	r6, #1
 8000922:	e7f2      	b.n	800090a <__libc_init_array+0x1e>
 8000924:	0800094c 	.word	0x0800094c
 8000928:	0800094c 	.word	0x0800094c
 800092c:	08000950 	.word	0x08000950
 8000930:	0800094c 	.word	0x0800094c

08000934 <_init>:
 8000934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000936:	46c0      	nop			; (mov r8, r8)
 8000938:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800093a:	bc08      	pop	{r3}
 800093c:	469e      	mov	lr, r3
 800093e:	4770      	bx	lr

08000940 <_fini>:
 8000940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000942:	46c0      	nop			; (mov r8, r8)
 8000944:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000946:	bc08      	pop	{r3}
 8000948:	469e      	mov	lr, r3
 800094a:	4770      	bx	lr
